[project]
name = "react-agent"
version = "0.0.1"
description = "Starter template for making a custom Reasoning and Action agent (using tool calling) in LangGraph."
authors = [
    { name = "William Fu-Hinthorn", email = "13333726+hinthornw@users.noreply.github.com" },
]
readme = "README.md"
license = { text = "MIT" }
requires-python = ">=3.9,<4.0"
dependencies = [
    "langgraph>=0.2.72",
    "langchain-openai>=0.3.5",
    "langchain-anthropic>=0.3.7",
    "langchain>=0.2.14",
    "langchain-core>=0.3.35",
    "langchain-fireworks>=0.2.7",
    "python-dotenv>=1.0.1",
    "langchain-community>=0.3.17",
    "tavily-python>=0.5.1",
    "psycopg2-binary>=2.9.10",  # PostgreSQL adapter
    "sqlalchemy>=2.0.38",       # SQL toolkit and ORM
    "matplotlib>=3.9.4",
    "pandas>=2.2.3",
    "numpy>=1.26.4",
    "seaborn>=0.13.0",
    "langgraph-checkpoint-sqlite>=2.0.4",  # For LangGraph checkpointing
    "langchain-experimental>=0.3.4",      # For experimental features
]


[project.optional-dependencies]
dev = [
    "pytest",
    "black",
    "mypy>=1.11.1",
    "ruff>=0.6.1",
]

[build-system]
requires = ["poetry>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.group.dev.dependencies]
pytest = "*"
black = "*"
mypy = ">=1.11.1"
ruff = ">=0.9.6"

[tool.setuptools]
packages = ["langgraph.templates.react_agent", "react_agent"]
[tool.setuptools.package-dir]
"langgraph.templates.react_agent" = "src/react_agent"
"react_agent" = "src/react_agent"


[tool.setuptools.package-data]
"*" = ["py.typed"]

[tool.ruff]
lint.select = [
    "E",    # pycodestyle
    "F",    # pyflakes
    "I",    # isort
    "D",    # pydocstyle
    "D401", # First line should be in imperative mood
    "T201",
    "UP",
]
lint.ignore = [
    "UP006",
    "UP007",
    # We actually do want to import from typing_extensions
    "UP035",
    # Relax the convention by _not_ requiring documentation for every function parameter.
    "D417",
    "E501",
]
[tool.ruff.lint.per-file-ignores]
"tests/*" = ["D", "UP"]
[tool.ruff.lint.pydocstyle]
convention = "google"
